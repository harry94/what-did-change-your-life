CREATE DATABASE IF NOT EXISTS life_chng;

CREATE TABLE USER (
uid INT NOT NULL AUTO_INCREMENT,
uname VARCHAR (50) NOT NULL,
profile_picture VARCHAR (250) NOT NULL,
email VARCHAR (50) NOT NULL,
bio VARCHAR (250),
PRIMARY KEY (uid),
UNIQUE KEY (email)
);

CREATE TABLE POST (
uid INT NOT NULL,
pid INT NOT NULL AUTO_INCREMENT,
PRIMARY KEY (pid),
FOREIGN KEY (uid) REFERENCES USER (uid) ON DELETE CASCADE
);

CREATE TABLE POST_DETAILS (
pid INT NOT NULL,
content blob NOT NULL,
upvote INT NOT NULL DEFAULT '1',
downvote INT NOT NULL DEFAULT '0',
category_name VARCHAR(250),
post_date TIMESTAMP,
FOREIGN KEY (pid) REFERENCES POST (pid) ON DELETE CASCADE
);

CREATE TABLE CATEGORY (
category_id INT NOT NULL AUTO_INCREMENT,
category_name VARCHAR (250) NOT NULL,
PRIMARY KEY (category_id)
);

CREATE TABLE VIEW (
pid INT NOT NULL,
view_count INT NOT NULL DEFAULT '1',
view_location VARCHAR(250),
FOREIGN KEY (pid) REFERENCES POST (pid) ON DELETE CASCADE
);

CREATE TABLE POINTS (
uid INT NOT NULL,
point INT NOT NULL DEFAULT '0',
FOREIGN KEY (uid) REFERENCES USER (uid) ON DELETE CASCADE
);

CREATE TABLE UPVOTE (
pid INT NOT NULL,
uid INT NOT NULL,
FOREIGN KEY (pid) REFERENCES POST (pid) ON DELETE CASCADE,
FOREIGN KEY (uid) REFERENCES USER (uid) ON DELETE CASCADE
);

CREATE TABLE DOWNVOTE (
pid INT NOT NULL,
uid INT NOT NULL,
FOREIGN KEY (pid) REFERENCES POST (pid) ON DELETE CASCADE,
FOREIGN KEY (uid) REFERENCES USER (uid) ON DELETE CASCADE
);

/*CREATE TABLE VOTES (
pid INT NOT NULL,
uid INT NOT NULL,
down_vote INT NOT NULL DEFAULT '0',
up_vote INT NOT NULL DEFAULT '0',
CHECK (down_vote <= 1)
CHECK (up_vote <= 1)
FOREIGN KEY (pid) REFERENCE POST (pid) ON DELETE CASCADE,
FOREIGN KEY (uid) REFERENCE USER (uid) ON DELETE CASCADE
);
*/
